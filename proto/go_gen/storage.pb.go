// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.24.0
// 	protoc        v3.12.4
// source: storage.proto

package novumind_goku_proto_storage

import (
	proto "github.com/golang/protobuf/proto"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// This is a compile-time assertion that a sufficiently up-to-date version
// of the legacy proto package is being used.
const _ = proto.ProtoPackageIsVersion4

type Task_StatusCode int32

const (
	Task_PENDING Task_StatusCode = 0
	Task_RUNNING Task_StatusCode = 1
	Task_SUCCESS Task_StatusCode = 2
	Task_FAILED  Task_StatusCode = 3
)

// Enum value maps for Task_StatusCode.
var (
	Task_StatusCode_name = map[int32]string{
		0: "PENDING",
		1: "RUNNING",
		2: "SUCCESS",
		3: "FAILED",
	}
	Task_StatusCode_value = map[string]int32{
		"PENDING": 0,
		"RUNNING": 1,
		"SUCCESS": 2,
		"FAILED":  3,
	}
)

func (x Task_StatusCode) Enum() *Task_StatusCode {
	p := new(Task_StatusCode)
	*p = x
	return p
}

func (x Task_StatusCode) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (Task_StatusCode) Descriptor() protoreflect.EnumDescriptor {
	return file_storage_proto_enumTypes[0].Descriptor()
}

func (Task_StatusCode) Type() protoreflect.EnumType {
	return &file_storage_proto_enumTypes[0]
}

func (x Task_StatusCode) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use Task_StatusCode.Descriptor instead.
func (Task_StatusCode) EnumDescriptor() ([]byte, []int) {
	return file_storage_proto_rawDescGZIP(), []int{0, 0}
}

type Task struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id            string          `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	VideoUrl      string          `protobuf:"bytes,2,opt,name=video_url,json=videoUrl,proto3" json:"video_url,omitempty"`
	StartTime     int64           `protobuf:"varint,3,opt,name=start_time,json=startTime,proto3" json:"start_time,omitempty"`
	EndTime       int64           `protobuf:"varint,4,opt,name=end_time,json=endTime,proto3" json:"end_time,omitempty"`
	StatusCode    Task_StatusCode `protobuf:"varint,5,opt,name=status_code,json=statusCode,proto3,enum=novumind.goku.proto.storage.Task_StatusCode" json:"status_code,omitempty"`
	ModelGroupIds []string        `protobuf:"bytes,6,rep,name=model_group_ids,json=modelGroupIds,proto3" json:"model_group_ids,omitempty"`
	Snapshot      []byte          `protobuf:"bytes,7,opt,name=snapshot,proto3" json:"snapshot,omitempty"`
	Labels        []string        `protobuf:"bytes,8,rep,name=labels,proto3" json:"labels,omitempty"`
}

func (x *Task) Reset() {
	*x = Task{}
	if protoimpl.UnsafeEnabled {
		mi := &file_storage_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Task) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Task) ProtoMessage() {}

func (x *Task) ProtoReflect() protoreflect.Message {
	mi := &file_storage_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Task.ProtoReflect.Descriptor instead.
func (*Task) Descriptor() ([]byte, []int) {
	return file_storage_proto_rawDescGZIP(), []int{0}
}

func (x *Task) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *Task) GetVideoUrl() string {
	if x != nil {
		return x.VideoUrl
	}
	return ""
}

func (x *Task) GetStartTime() int64 {
	if x != nil {
		return x.StartTime
	}
	return 0
}

func (x *Task) GetEndTime() int64 {
	if x != nil {
		return x.EndTime
	}
	return 0
}

func (x *Task) GetStatusCode() Task_StatusCode {
	if x != nil {
		return x.StatusCode
	}
	return Task_PENDING
}

func (x *Task) GetModelGroupIds() []string {
	if x != nil {
		return x.ModelGroupIds
	}
	return nil
}

func (x *Task) GetSnapshot() []byte {
	if x != nil {
		return x.Snapshot
	}
	return nil
}

func (x *Task) GetLabels() []string {
	if x != nil {
		return x.Labels
	}
	return nil
}

type Box struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	X      int32 `protobuf:"varint,1,opt,name=x,proto3" json:"x,omitempty"`
	Y      int32 `protobuf:"varint,2,opt,name=y,proto3" json:"y,omitempty"`
	Width  int32 `protobuf:"varint,3,opt,name=width,proto3" json:"width,omitempty"`
	Height int32 `protobuf:"varint,4,opt,name=height,proto3" json:"height,omitempty"`
}

func (x *Box) Reset() {
	*x = Box{}
	if protoimpl.UnsafeEnabled {
		mi := &file_storage_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Box) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Box) ProtoMessage() {}

func (x *Box) ProtoReflect() protoreflect.Message {
	mi := &file_storage_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Box.ProtoReflect.Descriptor instead.
func (*Box) Descriptor() ([]byte, []int) {
	return file_storage_proto_rawDescGZIP(), []int{1}
}

func (x *Box) GetX() int32 {
	if x != nil {
		return x.X
	}
	return 0
}

func (x *Box) GetY() int32 {
	if x != nil {
		return x.Y
	}
	return 0
}

func (x *Box) GetWidth() int32 {
	if x != nil {
		return x.Width
	}
	return 0
}

func (x *Box) GetHeight() int32 {
	if x != nil {
		return x.Height
	}
	return 0
}

type Detail struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Class      []string  `protobuf:"bytes,1,rep,name=class,proto3" json:"class,omitempty"`                         // 分类结果
	Confidence []float32 `protobuf:"fixed32,2,rep,packed,name=confidence,proto3" json:"confidence,omitempty"`      // 分类结果的置信度
	Bbox       *Box      `protobuf:"bytes,3,opt,name=bbox,proto3" json:"bbox,omitempty"`                           // bbox检测结果，只做分类则不存在bbox这个field
	Id         string    `protobuf:"bytes,4,opt,name=id,proto3" json:"id,omitempty"`                               // 如果做识别或者跟踪，则具备有在视频全局的id或特殊id
	ObjScore   float32   `protobuf:"fixed32,5,opt,name=obj_score,json=objScore,proto3" json:"obj_score,omitempty"` // Detection Use
}

func (x *Detail) Reset() {
	*x = Detail{}
	if protoimpl.UnsafeEnabled {
		mi := &file_storage_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Detail) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Detail) ProtoMessage() {}

func (x *Detail) ProtoReflect() protoreflect.Message {
	mi := &file_storage_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Detail.ProtoReflect.Descriptor instead.
func (*Detail) Descriptor() ([]byte, []int) {
	return file_storage_proto_rawDescGZIP(), []int{2}
}

func (x *Detail) GetClass() []string {
	if x != nil {
		return x.Class
	}
	return nil
}

func (x *Detail) GetConfidence() []float32 {
	if x != nil {
		return x.Confidence
	}
	return nil
}

func (x *Detail) GetBbox() *Box {
	if x != nil {
		return x.Bbox
	}
	return nil
}

func (x *Detail) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *Detail) GetObjScore() float32 {
	if x != nil {
		return x.ObjScore
	}
	return 0
}

// 关键帧信息
type FrameMetadata struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	FrameNum int64     `protobuf:"varint,1,opt,name=frame_num,json=frameNum,proto3" json:"frame_num,omitempty"`
	Details  []*Detail `protobuf:"bytes,2,rep,name=details,proto3" json:"details,omitempty"`
	ModelId  string    `protobuf:"bytes,3,opt,name=model_id,json=modelId,proto3" json:"model_id,omitempty"`
}

func (x *FrameMetadata) Reset() {
	*x = FrameMetadata{}
	if protoimpl.UnsafeEnabled {
		mi := &file_storage_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FrameMetadata) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FrameMetadata) ProtoMessage() {}

func (x *FrameMetadata) ProtoReflect() protoreflect.Message {
	mi := &file_storage_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FrameMetadata.ProtoReflect.Descriptor instead.
func (*FrameMetadata) Descriptor() ([]byte, []int) {
	return file_storage_proto_rawDescGZIP(), []int{3}
}

func (x *FrameMetadata) GetFrameNum() int64 {
	if x != nil {
		return x.FrameNum
	}
	return 0
}

func (x *FrameMetadata) GetDetails() []*Detail {
	if x != nil {
		return x.Details
	}
	return nil
}

func (x *FrameMetadata) GetModelId() string {
	if x != nil {
		return x.ModelId
	}
	return ""
}

// 模型的输出，由关键帧信息组成
type ModelOutput struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Metadatas   []*FrameMetadata `protobuf:"bytes,1,rep,name=metadatas,proto3" json:"metadatas,omitempty"`
	ExampleInfo *ExampleInfo     `protobuf:"bytes,2,opt,name=example_info,json=exampleInfo,proto3" json:"example_info,omitempty"`
}

func (x *ModelOutput) Reset() {
	*x = ModelOutput{}
	if protoimpl.UnsafeEnabled {
		mi := &file_storage_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ModelOutput) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ModelOutput) ProtoMessage() {}

func (x *ModelOutput) ProtoReflect() protoreflect.Message {
	mi := &file_storage_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ModelOutput.ProtoReflect.Descriptor instead.
func (*ModelOutput) Descriptor() ([]byte, []int) {
	return file_storage_proto_rawDescGZIP(), []int{4}
}

func (x *ModelOutput) GetMetadatas() []*FrameMetadata {
	if x != nil {
		return x.Metadatas
	}
	return nil
}

func (x *ModelOutput) GetExampleInfo() *ExampleInfo {
	if x != nil {
		return x.ExampleInfo
	}
	return nil
}

type Loader struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CaffeLoader *CaffeLoader  `protobuf:"bytes,1,opt,name=caffe_loader,json=caffeLoader,proto3" json:"caffe_loader,omitempty"`
	TfLoader    *TensorLoader `protobuf:"bytes,2,opt,name=tf_loader,json=tfLoader,proto3" json:"tf_loader,omitempty"`
}

func (x *Loader) Reset() {
	*x = Loader{}
	if protoimpl.UnsafeEnabled {
		mi := &file_storage_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Loader) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Loader) ProtoMessage() {}

func (x *Loader) ProtoReflect() protoreflect.Message {
	mi := &file_storage_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Loader.ProtoReflect.Descriptor instead.
func (*Loader) Descriptor() ([]byte, []int) {
	return file_storage_proto_rawDescGZIP(), []int{5}
}

func (x *Loader) GetCaffeLoader() *CaffeLoader {
	if x != nil {
		return x.CaffeLoader
	}
	return nil
}

func (x *Loader) GetTfLoader() *TensorLoader {
	if x != nil {
		return x.TfLoader
	}
	return nil
}

type Model struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id   string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Name string `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	// deprecated, use model_param instead
	Loader *Loader `protobuf:"bytes,3,opt,name=loader,proto3" json:"loader,omitempty"`
	// the model is used for which model_groups/topics
	Tags       []string    `protobuf:"bytes,4,rep,name=tags,proto3" json:"tags,omitempty"`
	ModelParam *ModelParam `protobuf:"bytes,5,opt,name=model_param,json=modelParam,proto3" json:"model_param,omitempty"`
}

func (x *Model) Reset() {
	*x = Model{}
	if protoimpl.UnsafeEnabled {
		mi := &file_storage_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Model) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Model) ProtoMessage() {}

func (x *Model) ProtoReflect() protoreflect.Message {
	mi := &file_storage_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Model.ProtoReflect.Descriptor instead.
func (*Model) Descriptor() ([]byte, []int) {
	return file_storage_proto_rawDescGZIP(), []int{6}
}

func (x *Model) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *Model) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *Model) GetLoader() *Loader {
	if x != nil {
		return x.Loader
	}
	return nil
}

func (x *Model) GetTags() []string {
	if x != nil {
		return x.Tags
	}
	return nil
}

func (x *Model) GetModelParam() *ModelParam {
	if x != nil {
		return x.ModelParam
	}
	return nil
}

// 模型在load时需要指定其默认处理的图像尺寸，Inference时图片会resize成该指定的尺寸
// deprecated, not used any more
type ImageSize struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Width    int32 `protobuf:"varint,1,opt,name=width,proto3" json:"width,omitempty"`
	Height   int32 `protobuf:"varint,2,opt,name=height,proto3" json:"height,omitempty"`
	Channels int32 `protobuf:"varint,3,opt,name=channels,proto3" json:"channels,omitempty"`
}

func (x *ImageSize) Reset() {
	*x = ImageSize{}
	if protoimpl.UnsafeEnabled {
		mi := &file_storage_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ImageSize) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ImageSize) ProtoMessage() {}

func (x *ImageSize) ProtoReflect() protoreflect.Message {
	mi := &file_storage_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ImageSize.ProtoReflect.Descriptor instead.
func (*ImageSize) Descriptor() ([]byte, []int) {
	return file_storage_proto_rawDescGZIP(), []int{7}
}

func (x *ImageSize) GetWidth() int32 {
	if x != nil {
		return x.Width
	}
	return 0
}

func (x *ImageSize) GetHeight() int32 {
	if x != nil {
		return x.Height
	}
	return 0
}

func (x *ImageSize) GetChannels() int32 {
	if x != nil {
		return x.Channels
	}
	return 0
}

// deprecated, use ModelParm instead
type CaffeLoader struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ModelDef        string     `protobuf:"bytes,1,opt,name=model_def,json=modelDef,proto3" json:"model_def,omitempty"`
	PretrainedModel string     `protobuf:"bytes,2,opt,name=pretrained_model,json=pretrainedModel,proto3" json:"pretrained_model,omitempty"`
	ImageSize       *ImageSize `protobuf:"bytes,3,opt,name=image_size,json=imageSize,proto3" json:"image_size,omitempty"`
	MeanFile        string     `protobuf:"bytes,4,opt,name=mean_file,json=meanFile,proto3" json:"mean_file,omitempty"`
	InputScale      float64    `protobuf:"fixed64,5,opt,name=input_scale,json=inputScale,proto3" json:"input_scale,omitempty"`
	RawScale        float64    `protobuf:"fixed64,6,opt,name=raw_scale,json=rawScale,proto3" json:"raw_scale,omitempty"`
	LabelText       string     `protobuf:"bytes,7,opt,name=label_text,json=labelText,proto3" json:"label_text,omitempty"`
	OtherParams     []string   `protobuf:"bytes,8,rep,name=other_params,json=otherParams,proto3" json:"other_params,omitempty"`
}

func (x *CaffeLoader) Reset() {
	*x = CaffeLoader{}
	if protoimpl.UnsafeEnabled {
		mi := &file_storage_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CaffeLoader) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CaffeLoader) ProtoMessage() {}

func (x *CaffeLoader) ProtoReflect() protoreflect.Message {
	mi := &file_storage_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CaffeLoader.ProtoReflect.Descriptor instead.
func (*CaffeLoader) Descriptor() ([]byte, []int) {
	return file_storage_proto_rawDescGZIP(), []int{8}
}

func (x *CaffeLoader) GetModelDef() string {
	if x != nil {
		return x.ModelDef
	}
	return ""
}

func (x *CaffeLoader) GetPretrainedModel() string {
	if x != nil {
		return x.PretrainedModel
	}
	return ""
}

func (x *CaffeLoader) GetImageSize() *ImageSize {
	if x != nil {
		return x.ImageSize
	}
	return nil
}

func (x *CaffeLoader) GetMeanFile() string {
	if x != nil {
		return x.MeanFile
	}
	return ""
}

func (x *CaffeLoader) GetInputScale() float64 {
	if x != nil {
		return x.InputScale
	}
	return 0
}

func (x *CaffeLoader) GetRawScale() float64 {
	if x != nil {
		return x.RawScale
	}
	return 0
}

func (x *CaffeLoader) GetLabelText() string {
	if x != nil {
		return x.LabelText
	}
	return ""
}

func (x *CaffeLoader) GetOtherParams() []string {
	if x != nil {
		return x.OtherParams
	}
	return nil
}

// deprecated, not used any more
type TensorLoader struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CkptPath    string     `protobuf:"bytes,1,opt,name=ckpt_path,json=ckptPath,proto3" json:"ckpt_path,omitempty"`
	ImageSize   *ImageSize `protobuf:"bytes,2,opt,name=image_size,json=imageSize,proto3" json:"image_size,omitempty"`
	OtherParams []string   `protobuf:"bytes,3,rep,name=other_params,json=otherParams,proto3" json:"other_params,omitempty"`
}

func (x *TensorLoader) Reset() {
	*x = TensorLoader{}
	if protoimpl.UnsafeEnabled {
		mi := &file_storage_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TensorLoader) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TensorLoader) ProtoMessage() {}

func (x *TensorLoader) ProtoReflect() protoreflect.Message {
	mi := &file_storage_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TensorLoader.ProtoReflect.Descriptor instead.
func (*TensorLoader) Descriptor() ([]byte, []int) {
	return file_storage_proto_rawDescGZIP(), []int{9}
}

func (x *TensorLoader) GetCkptPath() string {
	if x != nil {
		return x.CkptPath
	}
	return ""
}

func (x *TensorLoader) GetImageSize() *ImageSize {
	if x != nil {
		return x.ImageSize
	}
	return nil
}

func (x *TensorLoader) GetOtherParams() []string {
	if x != nil {
		return x.OtherParams
	}
	return nil
}

type ThresholdIdx struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Threshold float64 `protobuf:"fixed64,1,opt,name=threshold,proto3" json:"threshold,omitempty"`
	Idx       int32   `protobuf:"varint,2,opt,name=idx,proto3" json:"idx,omitempty"`
}

func (x *ThresholdIdx) Reset() {
	*x = ThresholdIdx{}
	if protoimpl.UnsafeEnabled {
		mi := &file_storage_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ThresholdIdx) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ThresholdIdx) ProtoMessage() {}

func (x *ThresholdIdx) ProtoReflect() protoreflect.Message {
	mi := &file_storage_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ThresholdIdx.ProtoReflect.Descriptor instead.
func (*ThresholdIdx) Descriptor() ([]byte, []int) {
	return file_storage_proto_rawDescGZIP(), []int{10}
}

func (x *ThresholdIdx) GetThreshold() float64 {
	if x != nil {
		return x.Threshold
	}
	return 0
}

func (x *ThresholdIdx) GetIdx() int32 {
	if x != nil {
		return x.Idx
	}
	return 0
}

// model parameters when initializing a model
type ModelParam struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	NovuModelFile    string          `protobuf:"bytes,1,opt,name=novu_model_file,json=novuModelFile,proto3" json:"novu_model_file,omitempty"`
	CaffeModelFile   string          `protobuf:"bytes,2,opt,name=caffe_model_file,json=caffeModelFile,proto3" json:"caffe_model_file,omitempty"`
	CaffeTrainedFile string          `protobuf:"bytes,3,opt,name=caffe_trained_file,json=caffeTrainedFile,proto3" json:"caffe_trained_file,omitempty"`
	MeanFile         string          `protobuf:"bytes,4,opt,name=mean_file,json=meanFile,proto3" json:"mean_file,omitempty"`
	LabelFile        string          `protobuf:"bytes,5,opt,name=label_file,json=labelFile,proto3" json:"label_file,omitempty"`
	ThresholdIdx     []*ThresholdIdx `protobuf:"bytes,6,rep,name=threshold_idx,json=thresholdIdx,proto3" json:"threshold_idx,omitempty"`
	Stddev           float32         `protobuf:"fixed32,7,opt,name=stddev,proto3" json:"stddev,omitempty"`
	BaseSize         int32           `protobuf:"varint,8,opt,name=base_size,json=baseSize,proto3" json:"base_size,omitempty"`
	TopK             int32           `protobuf:"varint,9,opt,name=top_k,json=topK,proto3" json:"top_k,omitempty"`
	IsBgr            bool            `protobuf:"varint,10,opt,name=is_bgr,json=isBgr,proto3" json:"is_bgr,omitempty"`
}

func (x *ModelParam) Reset() {
	*x = ModelParam{}
	if protoimpl.UnsafeEnabled {
		mi := &file_storage_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ModelParam) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ModelParam) ProtoMessage() {}

func (x *ModelParam) ProtoReflect() protoreflect.Message {
	mi := &file_storage_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ModelParam.ProtoReflect.Descriptor instead.
func (*ModelParam) Descriptor() ([]byte, []int) {
	return file_storage_proto_rawDescGZIP(), []int{11}
}

func (x *ModelParam) GetNovuModelFile() string {
	if x != nil {
		return x.NovuModelFile
	}
	return ""
}

func (x *ModelParam) GetCaffeModelFile() string {
	if x != nil {
		return x.CaffeModelFile
	}
	return ""
}

func (x *ModelParam) GetCaffeTrainedFile() string {
	if x != nil {
		return x.CaffeTrainedFile
	}
	return ""
}

func (x *ModelParam) GetMeanFile() string {
	if x != nil {
		return x.MeanFile
	}
	return ""
}

func (x *ModelParam) GetLabelFile() string {
	if x != nil {
		return x.LabelFile
	}
	return ""
}

func (x *ModelParam) GetThresholdIdx() []*ThresholdIdx {
	if x != nil {
		return x.ThresholdIdx
	}
	return nil
}

func (x *ModelParam) GetStddev() float32 {
	if x != nil {
		return x.Stddev
	}
	return 0
}

func (x *ModelParam) GetBaseSize() int32 {
	if x != nil {
		return x.BaseSize
	}
	return 0
}

func (x *ModelParam) GetTopK() int32 {
	if x != nil {
		return x.TopK
	}
	return 0
}

func (x *ModelParam) GetIsBgr() bool {
	if x != nil {
		return x.IsBgr
	}
	return false
}

type ModelGroup struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id        string   `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	TopicName string   `protobuf:"bytes,2,opt,name=topic_name,json=topicName,proto3" json:"topic_name,omitempty"`
	ModelIds  []string `protobuf:"bytes,3,rep,name=model_ids,json=modelIds,proto3" json:"model_ids,omitempty"`
}

func (x *ModelGroup) Reset() {
	*x = ModelGroup{}
	if protoimpl.UnsafeEnabled {
		mi := &file_storage_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ModelGroup) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ModelGroup) ProtoMessage() {}

func (x *ModelGroup) ProtoReflect() protoreflect.Message {
	mi := &file_storage_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ModelGroup.ProtoReflect.Descriptor instead.
func (*ModelGroup) Descriptor() ([]byte, []int) {
	return file_storage_proto_rawDescGZIP(), []int{12}
}

func (x *ModelGroup) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *ModelGroup) GetTopicName() string {
	if x != nil {
		return x.TopicName
	}
	return ""
}

func (x *ModelGroup) GetModelIds() []string {
	if x != nil {
		return x.ModelIds
	}
	return nil
}

// Save the snapshot image of the specified frame num which matches one of the model group tags and
// confidence bigger than the threshold
type ExampleInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	FrameNum   int32   `protobuf:"varint,1,opt,name=frame_num,json=frameNum,proto3" json:"frame_num,omitempty"`
	Tag        string  `protobuf:"bytes,2,opt,name=tag,proto3" json:"tag,omitempty"`
	Confidence float32 `protobuf:"fixed32,3,opt,name=confidence,proto3" json:"confidence,omitempty"`
	Image      []byte  `protobuf:"bytes,4,opt,name=image,proto3" json:"image,omitempty"`
}

func (x *ExampleInfo) Reset() {
	*x = ExampleInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_storage_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ExampleInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ExampleInfo) ProtoMessage() {}

func (x *ExampleInfo) ProtoReflect() protoreflect.Message {
	mi := &file_storage_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ExampleInfo.ProtoReflect.Descriptor instead.
func (*ExampleInfo) Descriptor() ([]byte, []int) {
	return file_storage_proto_rawDescGZIP(), []int{13}
}

func (x *ExampleInfo) GetFrameNum() int32 {
	if x != nil {
		return x.FrameNum
	}
	return 0
}

func (x *ExampleInfo) GetTag() string {
	if x != nil {
		return x.Tag
	}
	return ""
}

func (x *ExampleInfo) GetConfidence() float32 {
	if x != nil {
		return x.Confidence
	}
	return 0
}

func (x *ExampleInfo) GetImage() []byte {
	if x != nil {
		return x.Image
	}
	return nil
}

var File_storage_proto protoreflect.FileDescriptor

var file_storage_proto_rawDesc = []byte{
	0x0a, 0x0d, 0x73, 0x74, 0x6f, 0x72, 0x61, 0x67, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12,
	0x1b, 0x6e, 0x6f, 0x76, 0x75, 0x6d, 0x69, 0x6e, 0x64, 0x2e, 0x67, 0x6f, 0x6b, 0x75, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x73, 0x74, 0x6f, 0x72, 0x61, 0x67, 0x65, 0x22, 0xd9, 0x02, 0x0a,
	0x04, 0x54, 0x61, 0x73, 0x6b, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x02, 0x69, 0x64, 0x12, 0x1b, 0x0a, 0x09, 0x76, 0x69, 0x64, 0x65, 0x6f, 0x5f, 0x75,
	0x72, 0x6c, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x76, 0x69, 0x64, 0x65, 0x6f, 0x55,
	0x72, 0x6c, 0x12, 0x1d, 0x0a, 0x0a, 0x73, 0x74, 0x61, 0x72, 0x74, 0x5f, 0x74, 0x69, 0x6d, 0x65,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x73, 0x74, 0x61, 0x72, 0x74, 0x54, 0x69, 0x6d,
	0x65, 0x12, 0x19, 0x0a, 0x08, 0x65, 0x6e, 0x64, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x04, 0x20,
	0x01, 0x28, 0x03, 0x52, 0x07, 0x65, 0x6e, 0x64, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x4d, 0x0a, 0x0b,
	0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x5f, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28,
	0x0e, 0x32, 0x2c, 0x2e, 0x6e, 0x6f, 0x76, 0x75, 0x6d, 0x69, 0x6e, 0x64, 0x2e, 0x67, 0x6f, 0x6b,
	0x75, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x73, 0x74, 0x6f, 0x72, 0x61, 0x67, 0x65, 0x2e,
	0x54, 0x61, 0x73, 0x6b, 0x2e, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x43, 0x6f, 0x64, 0x65, 0x52,
	0x0a, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x43, 0x6f, 0x64, 0x65, 0x12, 0x26, 0x0a, 0x0f, 0x6d,
	0x6f, 0x64, 0x65, 0x6c, 0x5f, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x5f, 0x69, 0x64, 0x73, 0x18, 0x06,
	0x20, 0x03, 0x28, 0x09, 0x52, 0x0d, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x47, 0x72, 0x6f, 0x75, 0x70,
	0x49, 0x64, 0x73, 0x12, 0x1a, 0x0a, 0x08, 0x73, 0x6e, 0x61, 0x70, 0x73, 0x68, 0x6f, 0x74, 0x18,
	0x07, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x08, 0x73, 0x6e, 0x61, 0x70, 0x73, 0x68, 0x6f, 0x74, 0x12,
	0x16, 0x0a, 0x06, 0x6c, 0x61, 0x62, 0x65, 0x6c, 0x73, 0x18, 0x08, 0x20, 0x03, 0x28, 0x09, 0x52,
	0x06, 0x6c, 0x61, 0x62, 0x65, 0x6c, 0x73, 0x22, 0x3f, 0x0a, 0x0a, 0x53, 0x74, 0x61, 0x74, 0x75,
	0x73, 0x43, 0x6f, 0x64, 0x65, 0x12, 0x0b, 0x0a, 0x07, 0x50, 0x45, 0x4e, 0x44, 0x49, 0x4e, 0x47,
	0x10, 0x00, 0x12, 0x0b, 0x0a, 0x07, 0x52, 0x55, 0x4e, 0x4e, 0x49, 0x4e, 0x47, 0x10, 0x01, 0x12,
	0x0b, 0x0a, 0x07, 0x53, 0x55, 0x43, 0x43, 0x45, 0x53, 0x53, 0x10, 0x02, 0x12, 0x0a, 0x0a, 0x06,
	0x46, 0x41, 0x49, 0x4c, 0x45, 0x44, 0x10, 0x03, 0x22, 0x4f, 0x0a, 0x03, 0x42, 0x6f, 0x78, 0x12,
	0x0c, 0x0a, 0x01, 0x78, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x01, 0x78, 0x12, 0x0c, 0x0a,
	0x01, 0x79, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x01, 0x79, 0x12, 0x14, 0x0a, 0x05, 0x77,
	0x69, 0x64, 0x74, 0x68, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x05, 0x77, 0x69, 0x64, 0x74,
	0x68, 0x12, 0x16, 0x0a, 0x06, 0x68, 0x65, 0x69, 0x67, 0x68, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28,
	0x05, 0x52, 0x06, 0x68, 0x65, 0x69, 0x67, 0x68, 0x74, 0x22, 0xa1, 0x01, 0x0a, 0x06, 0x44, 0x65,
	0x74, 0x61, 0x69, 0x6c, 0x12, 0x14, 0x0a, 0x05, 0x63, 0x6c, 0x61, 0x73, 0x73, 0x18, 0x01, 0x20,
	0x03, 0x28, 0x09, 0x52, 0x05, 0x63, 0x6c, 0x61, 0x73, 0x73, 0x12, 0x1e, 0x0a, 0x0a, 0x63, 0x6f,
	0x6e, 0x66, 0x69, 0x64, 0x65, 0x6e, 0x63, 0x65, 0x18, 0x02, 0x20, 0x03, 0x28, 0x02, 0x52, 0x0a,
	0x63, 0x6f, 0x6e, 0x66, 0x69, 0x64, 0x65, 0x6e, 0x63, 0x65, 0x12, 0x34, 0x0a, 0x04, 0x62, 0x62,
	0x6f, 0x78, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x20, 0x2e, 0x6e, 0x6f, 0x76, 0x75, 0x6d,
	0x69, 0x6e, 0x64, 0x2e, 0x67, 0x6f, 0x6b, 0x75, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x73,
	0x74, 0x6f, 0x72, 0x61, 0x67, 0x65, 0x2e, 0x42, 0x6f, 0x78, 0x52, 0x04, 0x62, 0x62, 0x6f, 0x78,
	0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64,
	0x12, 0x1b, 0x0a, 0x09, 0x6f, 0x62, 0x6a, 0x5f, 0x73, 0x63, 0x6f, 0x72, 0x65, 0x18, 0x05, 0x20,
	0x01, 0x28, 0x02, 0x52, 0x08, 0x6f, 0x62, 0x6a, 0x53, 0x63, 0x6f, 0x72, 0x65, 0x22, 0x86, 0x01,
	0x0a, 0x0d, 0x46, 0x72, 0x61, 0x6d, 0x65, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x12,
	0x1b, 0x0a, 0x09, 0x66, 0x72, 0x61, 0x6d, 0x65, 0x5f, 0x6e, 0x75, 0x6d, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x03, 0x52, 0x08, 0x66, 0x72, 0x61, 0x6d, 0x65, 0x4e, 0x75, 0x6d, 0x12, 0x3d, 0x0a, 0x07,
	0x64, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x23, 0x2e,
	0x6e, 0x6f, 0x76, 0x75, 0x6d, 0x69, 0x6e, 0x64, 0x2e, 0x67, 0x6f, 0x6b, 0x75, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x2e, 0x73, 0x74, 0x6f, 0x72, 0x61, 0x67, 0x65, 0x2e, 0x44, 0x65, 0x74, 0x61,
	0x69, 0x6c, 0x52, 0x07, 0x64, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x73, 0x12, 0x19, 0x0a, 0x08, 0x6d,
	0x6f, 0x64, 0x65, 0x6c, 0x5f, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6d,
	0x6f, 0x64, 0x65, 0x6c, 0x49, 0x64, 0x22, 0xa4, 0x01, 0x0a, 0x0b, 0x4d, 0x6f, 0x64, 0x65, 0x6c,
	0x4f, 0x75, 0x74, 0x70, 0x75, 0x74, 0x12, 0x48, 0x0a, 0x09, 0x6d, 0x65, 0x74, 0x61, 0x64, 0x61,
	0x74, 0x61, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x2a, 0x2e, 0x6e, 0x6f, 0x76, 0x75,
	0x6d, 0x69, 0x6e, 0x64, 0x2e, 0x67, 0x6f, 0x6b, 0x75, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e,
	0x73, 0x74, 0x6f, 0x72, 0x61, 0x67, 0x65, 0x2e, 0x46, 0x72, 0x61, 0x6d, 0x65, 0x4d, 0x65, 0x74,
	0x61, 0x64, 0x61, 0x74, 0x61, 0x52, 0x09, 0x6d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x73,
	0x12, 0x4b, 0x0a, 0x0c, 0x65, 0x78, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x5f, 0x69, 0x6e, 0x66, 0x6f,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x28, 0x2e, 0x6e, 0x6f, 0x76, 0x75, 0x6d, 0x69, 0x6e,
	0x64, 0x2e, 0x67, 0x6f, 0x6b, 0x75, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x73, 0x74, 0x6f,
	0x72, 0x61, 0x67, 0x65, 0x2e, 0x45, 0x78, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x49, 0x6e, 0x66, 0x6f,
	0x52, 0x0b, 0x65, 0x78, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x22, 0x9d, 0x01,
	0x0a, 0x06, 0x4c, 0x6f, 0x61, 0x64, 0x65, 0x72, 0x12, 0x4b, 0x0a, 0x0c, 0x63, 0x61, 0x66, 0x66,
	0x65, 0x5f, 0x6c, 0x6f, 0x61, 0x64, 0x65, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x28,
	0x2e, 0x6e, 0x6f, 0x76, 0x75, 0x6d, 0x69, 0x6e, 0x64, 0x2e, 0x67, 0x6f, 0x6b, 0x75, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x73, 0x74, 0x6f, 0x72, 0x61, 0x67, 0x65, 0x2e, 0x43, 0x61, 0x66,
	0x66, 0x65, 0x4c, 0x6f, 0x61, 0x64, 0x65, 0x72, 0x52, 0x0b, 0x63, 0x61, 0x66, 0x66, 0x65, 0x4c,
	0x6f, 0x61, 0x64, 0x65, 0x72, 0x12, 0x46, 0x0a, 0x09, 0x74, 0x66, 0x5f, 0x6c, 0x6f, 0x61, 0x64,
	0x65, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x29, 0x2e, 0x6e, 0x6f, 0x76, 0x75, 0x6d,
	0x69, 0x6e, 0x64, 0x2e, 0x67, 0x6f, 0x6b, 0x75, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x73,
	0x74, 0x6f, 0x72, 0x61, 0x67, 0x65, 0x2e, 0x54, 0x65, 0x6e, 0x73, 0x6f, 0x72, 0x4c, 0x6f, 0x61,
	0x64, 0x65, 0x72, 0x52, 0x08, 0x74, 0x66, 0x4c, 0x6f, 0x61, 0x64, 0x65, 0x72, 0x22, 0xc6, 0x01,
	0x0a, 0x05, 0x4d, 0x6f, 0x64, 0x65, 0x6c, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x3b, 0x0a, 0x06, 0x6c,
	0x6f, 0x61, 0x64, 0x65, 0x72, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x23, 0x2e, 0x6e, 0x6f,
	0x76, 0x75, 0x6d, 0x69, 0x6e, 0x64, 0x2e, 0x67, 0x6f, 0x6b, 0x75, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x2e, 0x73, 0x74, 0x6f, 0x72, 0x61, 0x67, 0x65, 0x2e, 0x4c, 0x6f, 0x61, 0x64, 0x65, 0x72,
	0x52, 0x06, 0x6c, 0x6f, 0x61, 0x64, 0x65, 0x72, 0x12, 0x12, 0x0a, 0x04, 0x74, 0x61, 0x67, 0x73,
	0x18, 0x04, 0x20, 0x03, 0x28, 0x09, 0x52, 0x04, 0x74, 0x61, 0x67, 0x73, 0x12, 0x48, 0x0a, 0x0b,
	0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x5f, 0x70, 0x61, 0x72, 0x61, 0x6d, 0x18, 0x05, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x27, 0x2e, 0x6e, 0x6f, 0x76, 0x75, 0x6d, 0x69, 0x6e, 0x64, 0x2e, 0x67, 0x6f, 0x6b,
	0x75, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x73, 0x74, 0x6f, 0x72, 0x61, 0x67, 0x65, 0x2e,
	0x4d, 0x6f, 0x64, 0x65, 0x6c, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x52, 0x0a, 0x6d, 0x6f, 0x64, 0x65,
	0x6c, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x22, 0x55, 0x0a, 0x09, 0x49, 0x6d, 0x61, 0x67, 0x65, 0x53,
	0x69, 0x7a, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x77, 0x69, 0x64, 0x74, 0x68, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x05, 0x52, 0x05, 0x77, 0x69, 0x64, 0x74, 0x68, 0x12, 0x16, 0x0a, 0x06, 0x68, 0x65, 0x69,
	0x67, 0x68, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x68, 0x65, 0x69, 0x67, 0x68,
	0x74, 0x12, 0x1a, 0x0a, 0x08, 0x63, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x73, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x05, 0x52, 0x08, 0x63, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x73, 0x22, 0xb9, 0x02,
	0x0a, 0x0b, 0x43, 0x61, 0x66, 0x66, 0x65, 0x4c, 0x6f, 0x61, 0x64, 0x65, 0x72, 0x12, 0x1b, 0x0a,
	0x09, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x5f, 0x64, 0x65, 0x66, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x08, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x44, 0x65, 0x66, 0x12, 0x29, 0x0a, 0x10, 0x70, 0x72,
	0x65, 0x74, 0x72, 0x61, 0x69, 0x6e, 0x65, 0x64, 0x5f, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x0f, 0x70, 0x72, 0x65, 0x74, 0x72, 0x61, 0x69, 0x6e, 0x65, 0x64,
	0x4d, 0x6f, 0x64, 0x65, 0x6c, 0x12, 0x45, 0x0a, 0x0a, 0x69, 0x6d, 0x61, 0x67, 0x65, 0x5f, 0x73,
	0x69, 0x7a, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x26, 0x2e, 0x6e, 0x6f, 0x76, 0x75,
	0x6d, 0x69, 0x6e, 0x64, 0x2e, 0x67, 0x6f, 0x6b, 0x75, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e,
	0x73, 0x74, 0x6f, 0x72, 0x61, 0x67, 0x65, 0x2e, 0x49, 0x6d, 0x61, 0x67, 0x65, 0x53, 0x69, 0x7a,
	0x65, 0x52, 0x09, 0x69, 0x6d, 0x61, 0x67, 0x65, 0x53, 0x69, 0x7a, 0x65, 0x12, 0x1b, 0x0a, 0x09,
	0x6d, 0x65, 0x61, 0x6e, 0x5f, 0x66, 0x69, 0x6c, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x08, 0x6d, 0x65, 0x61, 0x6e, 0x46, 0x69, 0x6c, 0x65, 0x12, 0x1f, 0x0a, 0x0b, 0x69, 0x6e, 0x70,
	0x75, 0x74, 0x5f, 0x73, 0x63, 0x61, 0x6c, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x01, 0x52, 0x0a,
	0x69, 0x6e, 0x70, 0x75, 0x74, 0x53, 0x63, 0x61, 0x6c, 0x65, 0x12, 0x1b, 0x0a, 0x09, 0x72, 0x61,
	0x77, 0x5f, 0x73, 0x63, 0x61, 0x6c, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x01, 0x52, 0x08, 0x72,
	0x61, 0x77, 0x53, 0x63, 0x61, 0x6c, 0x65, 0x12, 0x1d, 0x0a, 0x0a, 0x6c, 0x61, 0x62, 0x65, 0x6c,
	0x5f, 0x74, 0x65, 0x78, 0x74, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x6c, 0x61, 0x62,
	0x65, 0x6c, 0x54, 0x65, 0x78, 0x74, 0x12, 0x21, 0x0a, 0x0c, 0x6f, 0x74, 0x68, 0x65, 0x72, 0x5f,
	0x70, 0x61, 0x72, 0x61, 0x6d, 0x73, 0x18, 0x08, 0x20, 0x03, 0x28, 0x09, 0x52, 0x0b, 0x6f, 0x74,
	0x68, 0x65, 0x72, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x73, 0x22, 0x95, 0x01, 0x0a, 0x0c, 0x54, 0x65,
	0x6e, 0x73, 0x6f, 0x72, 0x4c, 0x6f, 0x61, 0x64, 0x65, 0x72, 0x12, 0x1b, 0x0a, 0x09, 0x63, 0x6b,
	0x70, 0x74, 0x5f, 0x70, 0x61, 0x74, 0x68, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x63,
	0x6b, 0x70, 0x74, 0x50, 0x61, 0x74, 0x68, 0x12, 0x45, 0x0a, 0x0a, 0x69, 0x6d, 0x61, 0x67, 0x65,
	0x5f, 0x73, 0x69, 0x7a, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x26, 0x2e, 0x6e, 0x6f,
	0x76, 0x75, 0x6d, 0x69, 0x6e, 0x64, 0x2e, 0x67, 0x6f, 0x6b, 0x75, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x2e, 0x73, 0x74, 0x6f, 0x72, 0x61, 0x67, 0x65, 0x2e, 0x49, 0x6d, 0x61, 0x67, 0x65, 0x53,
	0x69, 0x7a, 0x65, 0x52, 0x09, 0x69, 0x6d, 0x61, 0x67, 0x65, 0x53, 0x69, 0x7a, 0x65, 0x12, 0x21,
	0x0a, 0x0c, 0x6f, 0x74, 0x68, 0x65, 0x72, 0x5f, 0x70, 0x61, 0x72, 0x61, 0x6d, 0x73, 0x18, 0x03,
	0x20, 0x03, 0x28, 0x09, 0x52, 0x0b, 0x6f, 0x74, 0x68, 0x65, 0x72, 0x50, 0x61, 0x72, 0x61, 0x6d,
	0x73, 0x22, 0x3e, 0x0a, 0x0c, 0x54, 0x68, 0x72, 0x65, 0x73, 0x68, 0x6f, 0x6c, 0x64, 0x49, 0x64,
	0x78, 0x12, 0x1c, 0x0a, 0x09, 0x74, 0x68, 0x72, 0x65, 0x73, 0x68, 0x6f, 0x6c, 0x64, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x01, 0x52, 0x09, 0x74, 0x68, 0x72, 0x65, 0x73, 0x68, 0x6f, 0x6c, 0x64, 0x12,
	0x10, 0x0a, 0x03, 0x69, 0x64, 0x78, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x03, 0x69, 0x64,
	0x78, 0x22, 0xf9, 0x02, 0x0a, 0x0a, 0x4d, 0x6f, 0x64, 0x65, 0x6c, 0x50, 0x61, 0x72, 0x61, 0x6d,
	0x12, 0x26, 0x0a, 0x0f, 0x6e, 0x6f, 0x76, 0x75, 0x5f, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x5f, 0x66,
	0x69, 0x6c, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x6e, 0x6f, 0x76, 0x75, 0x4d,
	0x6f, 0x64, 0x65, 0x6c, 0x46, 0x69, 0x6c, 0x65, 0x12, 0x28, 0x0a, 0x10, 0x63, 0x61, 0x66, 0x66,
	0x65, 0x5f, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x5f, 0x66, 0x69, 0x6c, 0x65, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x0e, 0x63, 0x61, 0x66, 0x66, 0x65, 0x4d, 0x6f, 0x64, 0x65, 0x6c, 0x46, 0x69,
	0x6c, 0x65, 0x12, 0x2c, 0x0a, 0x12, 0x63, 0x61, 0x66, 0x66, 0x65, 0x5f, 0x74, 0x72, 0x61, 0x69,
	0x6e, 0x65, 0x64, 0x5f, 0x66, 0x69, 0x6c, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x10,
	0x63, 0x61, 0x66, 0x66, 0x65, 0x54, 0x72, 0x61, 0x69, 0x6e, 0x65, 0x64, 0x46, 0x69, 0x6c, 0x65,
	0x12, 0x1b, 0x0a, 0x09, 0x6d, 0x65, 0x61, 0x6e, 0x5f, 0x66, 0x69, 0x6c, 0x65, 0x18, 0x04, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x08, 0x6d, 0x65, 0x61, 0x6e, 0x46, 0x69, 0x6c, 0x65, 0x12, 0x1d, 0x0a,
	0x0a, 0x6c, 0x61, 0x62, 0x65, 0x6c, 0x5f, 0x66, 0x69, 0x6c, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x09, 0x6c, 0x61, 0x62, 0x65, 0x6c, 0x46, 0x69, 0x6c, 0x65, 0x12, 0x4e, 0x0a, 0x0d,
	0x74, 0x68, 0x72, 0x65, 0x73, 0x68, 0x6f, 0x6c, 0x64, 0x5f, 0x69, 0x64, 0x78, 0x18, 0x06, 0x20,
	0x03, 0x28, 0x0b, 0x32, 0x29, 0x2e, 0x6e, 0x6f, 0x76, 0x75, 0x6d, 0x69, 0x6e, 0x64, 0x2e, 0x67,
	0x6f, 0x6b, 0x75, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x73, 0x74, 0x6f, 0x72, 0x61, 0x67,
	0x65, 0x2e, 0x54, 0x68, 0x72, 0x65, 0x73, 0x68, 0x6f, 0x6c, 0x64, 0x49, 0x64, 0x78, 0x52, 0x0c,
	0x74, 0x68, 0x72, 0x65, 0x73, 0x68, 0x6f, 0x6c, 0x64, 0x49, 0x64, 0x78, 0x12, 0x16, 0x0a, 0x06,
	0x73, 0x74, 0x64, 0x64, 0x65, 0x76, 0x18, 0x07, 0x20, 0x01, 0x28, 0x02, 0x52, 0x06, 0x73, 0x74,
	0x64, 0x64, 0x65, 0x76, 0x12, 0x1b, 0x0a, 0x09, 0x62, 0x61, 0x73, 0x65, 0x5f, 0x73, 0x69, 0x7a,
	0x65, 0x18, 0x08, 0x20, 0x01, 0x28, 0x05, 0x52, 0x08, 0x62, 0x61, 0x73, 0x65, 0x53, 0x69, 0x7a,
	0x65, 0x12, 0x13, 0x0a, 0x05, 0x74, 0x6f, 0x70, 0x5f, 0x6b, 0x18, 0x09, 0x20, 0x01, 0x28, 0x05,
	0x52, 0x04, 0x74, 0x6f, 0x70, 0x4b, 0x12, 0x15, 0x0a, 0x06, 0x69, 0x73, 0x5f, 0x62, 0x67, 0x72,
	0x18, 0x0a, 0x20, 0x01, 0x28, 0x08, 0x52, 0x05, 0x69, 0x73, 0x42, 0x67, 0x72, 0x22, 0x58, 0x0a,
	0x0a, 0x4d, 0x6f, 0x64, 0x65, 0x6c, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x12, 0x0e, 0x0a, 0x02, 0x69,
	0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x12, 0x1d, 0x0a, 0x0a, 0x74,
	0x6f, 0x70, 0x69, 0x63, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x09, 0x74, 0x6f, 0x70, 0x69, 0x63, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x1b, 0x0a, 0x09, 0x6d, 0x6f,
	0x64, 0x65, 0x6c, 0x5f, 0x69, 0x64, 0x73, 0x18, 0x03, 0x20, 0x03, 0x28, 0x09, 0x52, 0x08, 0x6d,
	0x6f, 0x64, 0x65, 0x6c, 0x49, 0x64, 0x73, 0x22, 0x72, 0x0a, 0x0b, 0x45, 0x78, 0x61, 0x6d, 0x70,
	0x6c, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x1b, 0x0a, 0x09, 0x66, 0x72, 0x61, 0x6d, 0x65, 0x5f,
	0x6e, 0x75, 0x6d, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x08, 0x66, 0x72, 0x61, 0x6d, 0x65,
	0x4e, 0x75, 0x6d, 0x12, 0x10, 0x0a, 0x03, 0x74, 0x61, 0x67, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x03, 0x74, 0x61, 0x67, 0x12, 0x1e, 0x0a, 0x0a, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x64, 0x65,
	0x6e, 0x63, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x02, 0x52, 0x0a, 0x63, 0x6f, 0x6e, 0x66, 0x69,
	0x64, 0x65, 0x6e, 0x63, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x69, 0x6d, 0x61, 0x67, 0x65, 0x18, 0x04,
	0x20, 0x01, 0x28, 0x0c, 0x52, 0x05, 0x69, 0x6d, 0x61, 0x67, 0x65, 0x62, 0x06, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x33,
}

var (
	file_storage_proto_rawDescOnce sync.Once
	file_storage_proto_rawDescData = file_storage_proto_rawDesc
)

func file_storage_proto_rawDescGZIP() []byte {
	file_storage_proto_rawDescOnce.Do(func() {
		file_storage_proto_rawDescData = protoimpl.X.CompressGZIP(file_storage_proto_rawDescData)
	})
	return file_storage_proto_rawDescData
}

var file_storage_proto_enumTypes = make([]protoimpl.EnumInfo, 1)
var file_storage_proto_msgTypes = make([]protoimpl.MessageInfo, 14)
var file_storage_proto_goTypes = []interface{}{
	(Task_StatusCode)(0),  // 0: novumind.goku.proto.storage.Task.StatusCode
	(*Task)(nil),          // 1: novumind.goku.proto.storage.Task
	(*Box)(nil),           // 2: novumind.goku.proto.storage.Box
	(*Detail)(nil),        // 3: novumind.goku.proto.storage.Detail
	(*FrameMetadata)(nil), // 4: novumind.goku.proto.storage.FrameMetadata
	(*ModelOutput)(nil),   // 5: novumind.goku.proto.storage.ModelOutput
	(*Loader)(nil),        // 6: novumind.goku.proto.storage.Loader
	(*Model)(nil),         // 7: novumind.goku.proto.storage.Model
	(*ImageSize)(nil),     // 8: novumind.goku.proto.storage.ImageSize
	(*CaffeLoader)(nil),   // 9: novumind.goku.proto.storage.CaffeLoader
	(*TensorLoader)(nil),  // 10: novumind.goku.proto.storage.TensorLoader
	(*ThresholdIdx)(nil),  // 11: novumind.goku.proto.storage.ThresholdIdx
	(*ModelParam)(nil),    // 12: novumind.goku.proto.storage.ModelParam
	(*ModelGroup)(nil),    // 13: novumind.goku.proto.storage.ModelGroup
	(*ExampleInfo)(nil),   // 14: novumind.goku.proto.storage.ExampleInfo
}
var file_storage_proto_depIdxs = []int32{
	0,  // 0: novumind.goku.proto.storage.Task.status_code:type_name -> novumind.goku.proto.storage.Task.StatusCode
	2,  // 1: novumind.goku.proto.storage.Detail.bbox:type_name -> novumind.goku.proto.storage.Box
	3,  // 2: novumind.goku.proto.storage.FrameMetadata.details:type_name -> novumind.goku.proto.storage.Detail
	4,  // 3: novumind.goku.proto.storage.ModelOutput.metadatas:type_name -> novumind.goku.proto.storage.FrameMetadata
	14, // 4: novumind.goku.proto.storage.ModelOutput.example_info:type_name -> novumind.goku.proto.storage.ExampleInfo
	9,  // 5: novumind.goku.proto.storage.Loader.caffe_loader:type_name -> novumind.goku.proto.storage.CaffeLoader
	10, // 6: novumind.goku.proto.storage.Loader.tf_loader:type_name -> novumind.goku.proto.storage.TensorLoader
	6,  // 7: novumind.goku.proto.storage.Model.loader:type_name -> novumind.goku.proto.storage.Loader
	12, // 8: novumind.goku.proto.storage.Model.model_param:type_name -> novumind.goku.proto.storage.ModelParam
	8,  // 9: novumind.goku.proto.storage.CaffeLoader.image_size:type_name -> novumind.goku.proto.storage.ImageSize
	8,  // 10: novumind.goku.proto.storage.TensorLoader.image_size:type_name -> novumind.goku.proto.storage.ImageSize
	11, // 11: novumind.goku.proto.storage.ModelParam.threshold_idx:type_name -> novumind.goku.proto.storage.ThresholdIdx
	12, // [12:12] is the sub-list for method output_type
	12, // [12:12] is the sub-list for method input_type
	12, // [12:12] is the sub-list for extension type_name
	12, // [12:12] is the sub-list for extension extendee
	0,  // [0:12] is the sub-list for field type_name
}

func init() { file_storage_proto_init() }
func file_storage_proto_init() {
	if File_storage_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_storage_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Task); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_storage_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Box); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_storage_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Detail); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_storage_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*FrameMetadata); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_storage_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ModelOutput); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_storage_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Loader); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_storage_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Model); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_storage_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ImageSize); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_storage_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CaffeLoader); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_storage_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TensorLoader); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_storage_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ThresholdIdx); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_storage_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ModelParam); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_storage_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ModelGroup); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_storage_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ExampleInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_storage_proto_rawDesc,
			NumEnums:      1,
			NumMessages:   14,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_storage_proto_goTypes,
		DependencyIndexes: file_storage_proto_depIdxs,
		EnumInfos:         file_storage_proto_enumTypes,
		MessageInfos:      file_storage_proto_msgTypes,
	}.Build()
	File_storage_proto = out.File
	file_storage_proto_rawDesc = nil
	file_storage_proto_goTypes = nil
	file_storage_proto_depIdxs = nil
}
